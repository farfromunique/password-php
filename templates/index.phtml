<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8"/>
        <title>Slim 3</title>
        <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">

    </head>
    <body>
        <div class="container">
			<div class="row">
				<div class="col-md-12">
					<div class="page-header">
						<h1 class="text-center">ACWPD Random Password Generator</h1>
					</div>
					<p>
						This tool will generate a password for you using <a href="https://www.random.org/">Random.Org's</a> true random numbers. While the password is not guarenteed to be unique, there is a high probability that it is. It's also not something that can be guessed, as it's random.
					</p>
					<p>
						These passwords are not designed to be momorized; they're designed for use with password managers, such as those built in to modern browsers, or standalone products. Because of this, they have a lot of characters in them, many of which are "special". We're working on a way to ensure that each password includes 1 capital, 1 lower-case, 1 number, and 1 special character; until we have that feature in place, please just generate a new password if the one(s) you generated didn't meet your requirements.
					</p>
				</div>
			</div>
			<div class="row">
				<div class="col-md-4">
					<form role="form">
						<div class="form-group">
							<label for="password-length ">
								Number of characters in password
							</label>
							<input type="number" class="form-control" id="password-length" />
						</div>
						<div class="form-group">
							<label for="password-count ">
								Number of passwords to generate
							</label>
							<input type="number" class="form-control" id="password-count" />
						</div>
						<div class="form-group">
							<label for="character-range">
								Choose the list your password will come from
							</label>
							<input type="text" class="form-control" id="character-range" value="33:126" />
							<input type="hidden" name="min" id="min-character" value="33" />
							<input type="hidden" name="max" id="max-character" value="126" />
						</div>
						<div class="form-group">
							<label for="character-range">
								Type the characters you want to exclude
							</label>
							<input type="text" class="form-control" id="exclude" ></input>
						</div>
						<button type="submit" class="btn btn-default">
							Submit
						</button>
					</form>
				</div>
				<div class="col-md-4">
					<p>
						Your password will include only characters from this list:
					</p>
					<ul class="list-inline" id="all-characters">
						
					</ul>
					
				</div>
				<div class="col-md-4" id="passwords">
					<ul>
						
					</ul>
				</div>
			</div>

		</div>
		<div class="hidden" id="scripts">
			<script
				src="https://code.jquery.com/jquery-3.2.1.slim.min.js"
				integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" 
				crossorigin="anonymous"></script>
			<script
				src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js"
				integrity="sha384-b/U6ypiBEHpOf/4+1nzFpr53nxSS+GLCkfwBdFNTxtclqqenISfwAzpKaMNFNmj4"
				crossorigin="anonymous"></script>
			<script
				src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"
				integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa"
				crossorigin="anonymous"></script>
			<script
				src="http://cdn.intercoolerjs.org/intercooler-1.1.2.min.js"></script>
			<script>
				
				function addCharToList(char) {
					var ul = document.querySelector('#all-characters');
					var liToAdd = document.createElement('li');
					liToAdd.innerText = char;
					ul.appendChild(liToAdd);
				}
				function removeExcludedChars() {
					let exclude = document.querySelector('#exclude').value;
					let ex = exclude.split('');
					ex.forEach(
						function(char){
							for (let i = 0; i < all.childElementCount; i++) {
								if (all.childNodes[i].innerText == char) {
									all.childNodes[i].remove();
								}
							}
						}
					);
				}
				function makeList() {
					let range = document.querySelector('#character-range').value;
					let min = range.substr(0,range.indexOf(':'))-0;
					let max = range.substr(range.indexOf(':')+1)-0;
					
					for (let i = min; i < max; i++) {
						addCharToList(String.fromCharCode(i));
					}
				}

				$('#exclude').keyup(function(){
					let all = document.querySelector('#all-characters');
					let exclude = document.querySelector('#exclude').value;
					let ex = exclude.split('');
					ex.forEach(
						function(char){
							for (let i = 0; i < all.childElementCount; i++) {
								if (all.childNodes[i].innerText == char) {
									all.childNodes[i].remove();
								}
							}
						}
					);
				});
				

			</script>
		</div>
    </body>
</html>
